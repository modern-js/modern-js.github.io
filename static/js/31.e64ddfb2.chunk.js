(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{915:function(n,e){n.exports='# Strings\n\n---\n## String literals\n\n```javascript\n  \'single quotes string literal\'\n  "double quotes string literal"\n\n  const longString = "Lorem ipsum dolor sit amet, "\n    + "cum stet accommodare cu, vituperatoribus te cum. "\n    + "Ut mei viderer persecuti, vero malis ex quo. ";\n```\n\n---\n## Template strings\n\nTemplate strings can contain executable expressions.\nExpressions are resolved at the point of definition.\n\n```javascript\n  `back quote template literal with ${expressions}`\n  // will throw if expressions is not defined\n\n  `<a href=${item.getUrl()}>${item.getLabel()}</a>`\n```\n\n---\n## Properties Operators\n\n```javascript\n  const abc = \'abcdefg\';\n  const hello = \'hello world\';\n\n  abc.length // 3\n  hello.length // 11\n\n  // get a character\n  abc[0] // "a"\n  abc[100] // undefined\n\n  hello === "hello world" // true\n  hello > abc // true\n```\n\n---\n## String methods\n\n### Char access\n\n```javascript\n  "hello".charAt(0) // "h" ASCII\n  "hello".charCodeAt() // 104 Unicode\n  "hello".codePointAt(0) // 104 UTF-16\n```\n\n### Containment predicates\n\n```javascript\n  "hello world".indexOf("hello") // 0\n  "hello world".includes("hello") // true\n\n  "hello world".indexOf("WORLD") // -1\n  "hello world".includes("WORLD") // false\n\n  "hello".startsWith(\'h\') // true\n  "hello".endsWith(\'o\') // true\n```\n\n---\n## Split and concat\n\n```javascript\n  "hello".split(\'\') // [\'h\', \'e\', \'l\', \'l\', \'o\']\n  "split by word".split(\' \') // [\'split\', \'by\', \'word\']\n\n  "hello".concat(" world") // "hello world"\n```\n\n---\n## Substr vs Substring\n\n```javascript\n  // substr(index, lenght)\n  "hello world".substr(6, 5) // world\n\n  // substring(index, index)\n  "hello world".substring(6, 11) // world\n```\n\n---\n## Replace\n\n```javascript\n  // replaces only the first occurrence of the given string\n  "hello BIRD BIRD".replace(\'BIRD\', \'world\') // "hello world BIRD"\n\n  // replaces all occurrences of the given string\n  "hello BIRD BIRD".replace(/BIRD/g, \'world\') // "hello world world"\n```\n\n---\n## Unicode\n\n```javascript\n  \'\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\'.split(\'\') // [ \'\ud83d\udc68\', \'\ud83d\udc69\', \'\ud83d\udc66\' ]\n  \'\ud83d\udc68\' + \'\ud83c\udffd\' === "\ud83d\udc68\ud83c\udffd" // true\n```\n\n---\n## Links\n\n- [http://2ality.com/2013/09/javascript-unicode.html]\n- [http://speakingjs.com/es5/ch24.html]\n'}}]);
//# sourceMappingURL=31.e64ddfb2.chunk.js.map