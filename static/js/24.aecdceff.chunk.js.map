{"version":3,"sources":["../topics/language-features/loops.md"],"names":["module","exports"],"mappings":"4EAAAA,EAAAC,QAAA","file":"static/js/24.aecdceff.chunk.js","sourcesContent":["module.exports = \"# Loops\\n---\\n## Counting\\n\\n```javascript\\n  let i = 5;\\n  while (i > 0) {\\n    doStuff();\\n  }\\n\\n  for (let i = 0; i < 5; i += 1) {\\n    doStuff();\\n  }\\n```\\n---\\n\\n## Variable binding\\n\\n`var` is bound once\\n```javascript\\n  for (var i = 0; i < 5; i += 1) {\\n    setTimeout(() => console.log(i), 1000);\\n  }\\n\\n  //logs: 5 5 5 5 5\\n```\\n---\\n\\n`let` is rebound on each iteration of the loop\\n```javascript\\n  for (let i = 0; i < 5; i += 1) {\\n    setTimeout(() => console.log(i), 1000);\\n  }\\n\\n  //logs: 1 2 3 4 5\\n```\\n---\\n## Enumeration\\n\\n```javascript\\n  const array = ['a', 'b', 'c'];\\n  for (const index in array) {\\n    console.log(index); // 0, 1, 2\\n    console.log(array[index]); // 'a', 'b', 'c'\\n  }\\n\\n  for (const item of array) {\\n    console.log(item); // 'a', 'b', 'c'\\n  }\\n```\\n---\\n\\n## Recursion\\n\\n```javascript\\n  function countdown(n) {\\n    console.log(n);\\n    if (n > 0) {\\n      countdown(n - 1);\\n    }\\n  }\\n```\\n---\\n\\n## Scheduling\\n\\n```javascript\\n  setInterval(\\n    () => { console.log('gets called each second'); },\\n    1000\\n  );\\n\\n  const countdown = (n) => {\\n    console.log(n);\\n    if (n > 0) {\\n      setTimeout(\\n        () => countdown(n - 1),\\n        1000\\n      );\\n    }\\n  };\\n```\\n\""],"sourceRoot":""}