(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{919:function(n,e){n.exports='# Transpilers\n---\n\n## Babel\n\n- transforms non-standard syntax\n- manipulates the js AST\n- outputs valid target js code\n---\n\n## Using Babel\n\n- through a dynamic loader (Anti-pattern)\n- through the console (Better)\n- through a bundler / task runner (Best)\n---\n\n## Babel dynamic loader\n\n*!!Anti-pattern!!* Inject babel in your code and compile at run-time\nNode.js:\n```javascript\n  require("babel-register");\n  // all required files will now be transformed by Babel\n```\n---\n\nBrowsers:\n```html\n  <script src="https://unpkg.com/babel-standalone@6/babel.min.js"><\/script>\n  <script type="text/babel">\n    class Person = {\n      constructor(name) { this.name = name; }\n      sayHi() { return `Hello, my name is ${this.name}`; }\n    }\n  <\/script>\n```\n---\n\n## Babel Cli\n\nCompile in advance on your dev machine or CI\n```bash\n  babel script.js --out-file compiled-script.js\n\n  babel ./src --out-dir ./lib\n```\n---\n\n## Presets & Plugins\n\nBabel expects a `.babelrc` json config file in the project root.\n```json\n  {\n    "presets": [ "es2019", "react" ],\n    "plugins": [ "transform-decorators" ]\n  }\n```\n---\n## Other Transpilers\n\n- Google Closure Compiler\n- TypeScript\n- Elm\n- ClosureScript\n- and many more\n'}}]);
//# sourceMappingURL=39.0895e9b6.chunk.js.map