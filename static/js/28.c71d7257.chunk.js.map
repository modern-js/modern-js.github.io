{"version":3,"sources":["../topics/language-features/operators.md"],"names":["module","exports"],"mappings":"4EAAAA,EAAAC,QAAA","file":"static/js/28.c71d7257.chunk.js","sourcesContent":["module.exports = \"# Operators\\n\\n---\\n## Unary Operators\\n\\n```javascript\\n  !a // logical NOT\\n  ~a // bitwise NOT\\n\\n  +a // unary plus\\n  -a // unary minus\\n```\\n\\n---\\n## Logical Operators\\n\\n```javascript\\n  a && b; // logical AND; short circuit, returns the value\\n  a || b; // logical OR; short circuit, returns the value\\n```\\n\\n---\\n## Bitwise Operators\\n\\n```javascript\\n  a << 1 // bitwise shift left, preserves the sign\\n  a >> 1 // bitwise shift right, preserves the sign\\n  a >>> 1 // bitwise shift right, disregards sign\\n\\n  a & 0; // bitwise AND\\n  a | 0; // bitwise OR\\n  a ^ 0; // bitwise XOR\\n```\\n\\n---\\n## Assignment Operators\\n\\n```javascript\\n  a = 1; // assigns the value 1 to the variable \\\"a\\\"\\n  a += 1; // increment the value of the variable \\\"a\\\"\\n  a -= 1; // decrement the value of the variable \\\"a\\\"\\n  a *= 1; // multiply the value of the variable \\\"a\\\"\\n```\\n\\n---\\n## Pipe operator proposal\\n\\n```javascript\\n  \\\"terces\\\" |> reverse |> toUpperCase  // SECRET\\n\\n  // equivalent to:\\n  toUpperCase(reverse(\\\"terces\\\"));\\n```\\nSee [Pipe operator proposal](https://github.com/tc39/proposal-pipeline-operator)\\n\\n---\\n## Operator precedence\\n\\nSee [Operator Precedence on MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence)\\n\""],"sourceRoot":""}