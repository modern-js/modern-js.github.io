(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{900:function(n,t){n.exports="# Async/Await\nsyntactic sugar on top of promises, making asynchronous code look more like synchronous code.\n---\n\n## Async functions\nAsync functions always return a promise\n\n```javascript\n  async function getData() {\n    return { text: 'hello', numbers: [1, 2, 3] };\n  }\n\n  getData().then(useTheData);\n```\n---\n\n## Throwing an error\nAsync functions always return a promise\n\n```javascript\n  async function getData() {\n    throw new Error('no data');\n  }\n\n  getData().catch(handleError);\n```\n---\n\n## Waiting for a promise\nUsing the await keyword instructs JavaScript to \"pause\" the execution of the function\nuntil the promise is resolved\n\n```javascript\n  async function getData() {\n    const data = await fetch('url');\n    // execution will continue only after the promise is resolved\n\n    const newData = transform(data);\n    return newData;\n  }\n```\n---\n\n## Try/catch\n```javascript  \n// you can use try/catch instead of then() and catch()\nasync function render() {\n  try {\n    const data = await getData();\n    display(data);\n  catch (error) {\n    display(error);\n  }\n}\n```\n---\n\n## Await and loops\n\nWaits for each url to be downloaded before requesting the next one\n\n```javascript\nasync function getContent(urls) {\n  const results = [];\n\n  for (url of urls) {\n    const content = await fetch(url);\n    results.push(content);\n  }\n\n  return results;\n}\n```\n---\n\n## Async concurrency\n\nRequests for all urls start at the same time\n\n```javascript\nasync function getAllContent(urls) {\n  return Promise.all(\n    urls.map(url => fetch(url))\n  );\n}\n```\n---\n\n## Links\n\n- [async/await on MDN](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await)\n- [for-await-of Loops](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of)\n- [await in array functions](https://zellwk.com/blog/async-await-in-loops/)\n"}}]);
//# sourceMappingURL=16.e500bdd5.chunk.js.map