(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{922:function(n,e){n.exports='# Static Analysis\n\n- preventing common errors and "code smells"\n- enforcing code style and best practices\n\n---\n## ESLint\n\n```bash\n  # installing\n  npm i -g eslint\n  npm i -g eslint-config-airbnb\n\n  # running\n  eslint .\n```\n---\n\n## ESLint Configuration\n\nCreate an `.eslintrc` file in the project directory.\n```javascript\n  {\n      "env": { // where is your code going to run\n          "es2020": true,\n          "browser": true,\n          "node": true\n      },\n      "globals": { // whitelist specific global variables \n        "var1": "writable",\n        "var2": "readonly"\n      }\n  }\n```\n---\n\n## ESLint Rules\n\nEslint will complain if your code violates the specified rules.\n```javascript\n  "rules": { \n    "eqeqeq": "off",\n      "curly": "error",\n      "quotes": ["error", "double"]\n  }\n```\n- See [ESLint\'s list of available rules](https://eslint.org/docs/rules/)\n---\n\n## ESLint Presets\n\nYou can use a predefined list of rules, also known as a "style guide".\n\n```javascript\n  "extends": "eslint:recommended",\n  // or\n  "extends": "airbnb",\n```\n```bash\n # in the terminal\n  npm install --save-dev eslint-config-airbnb\n```\n- See the [AirBnB JavaScript Style Guide](https://github.com/airbnb/javascript)\n---\n\n## Prettier\nCommon code formatting enforces a consistent look and feel of a team\'s codebase.\n\n```bash\n  # installing\n  npm install -g prettier\n\n  # running\n  prettier .\n```\n---\n\n## Integrating prettier with eslint\n\n```bash\n  # installing in terminal\n  npm install -D eslint-config-prettier eslint-plugin-prettier\n```\n```javascript\n  // configuration in .eslintrc\n  "extends": ["airbnb", "prettier"],\n  "plugins": ["prettier"],\n  "rules": {\n    "prettier/prettier": ["error"]\n  }\n```\n---\n\n## Type systems\n\n- Flow\n- Typescript'}}]);
//# sourceMappingURL=38.eb2b94dd.chunk.js.map