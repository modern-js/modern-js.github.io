{"version":3,"sources":["../topics/language-features/scopes.md"],"names":["module","exports"],"mappings":"4EAAAA,EAAAC,QAAA","file":"static/js/30.895d472a.chunk.js","sourcesContent":["module.exports = \"# Scopes\\n---\\n\\n## Block scope\\n\\n```javascript\\n  let i = 100;\\n  {\\n    var x = 5;\\n    let y = 10;\\n    const z = 15;\\n  }\\n\\n  i // 100\\n  x // 5\\n  y // throws an Error\\n  z // throws an Error\\n```\\n---\\n\\n## Function scope\\n\\n```javascript\\nfunction f() {\\n  // var x is hoisted\\n  doSomeStuff(x); // x is undefined\\n\\n  var x = 5;\\n  // but the assignment happens at the\\n  // original place in the code\\n}\\n\\n// accessing x outside the function\\nx // throws an Error\\n```\\n---\\n\\n## Lexical scope (Closure)\\n\\nFunctions hold a reference to the scope\\nthey are defined in.\\n\\n---\\n\\\"Module\\\" A:\\n```javascript\\n  const greeting = 'Hi';\\n\\n  function person(name) {\\n\\n    return {\\n      sayHi() {\\n        console.log(`${greeting}, I'm ${name}`);\\n      }\\n    }\\n  }\\n```\\n\\n\\\"Module\\\" B:\\n```javascript\\n  person('Misho').sayHi();\\n  // Hi, I'm Misho\\n```\\n---\\n\\n## Module scope\\n\\nModules create their own scopes.\\nDifferent module systems have different\\nimplementation details.\\n\\n```javascript\\n  // imports are immutable bindings\\n  import lib from 'myLib';\\n\\n  // x is in the module scope\\n  let x = 5;\\n\\n  // exports are immutable bindings\\n  // the value of x cannot be changed\\n  // from outside of the module\\n  export x;\\n\\n  export function doStuff(arg) {\\n    // reassign x within the module\\n    x = lib.process(arg);\\n\\n    return 'done';\\n  }\\n  ```\\n---\\n\\n## Global scope\\n\\n- In the browser the global scope is the window object.\\n```javascript\\n  window.anything\\n```\\n- In node.js modules scope shadows global scope\\n- the `global` object exposes the global scope\\n```javascript\\n  // module scope\\n  const x = 50;\\n\\n  // implied globals are also in module scope\\n  y = 100;\\n\\n  // create \\\"true\\\" globals\\n  // by assigning to the global object\\n  global.z = 200;\\n```\\n\""],"sourceRoot":""}