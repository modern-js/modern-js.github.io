{"version":3,"sources":["../topics/host-environments/node-js.md"],"names":["module","exports"],"mappings":"4EAAAA,EAAAC,QAAA","file":"static/js/14.58575738.chunk.js","sourcesContent":["module.exports = \"# NodeJS\\n\\n- server side javascript environment\\n- runs on top of google V8 and libUV\\n- offers many capabilities\\n---\\n\\n## CommonJS Modules\\n\\nDefining modules\\n```javascript\\n  // module exports can be any type of value:  \\n  module.exports = { doStuff() }; // - objects\\n  module.exports = function (options) {} // - function\\n\\n  // by default module.exports is set to an empty object\\n  module.exports // {}\\n```\\n---\\n\\n## CommonJS Modules\\n\\nUsing modules:\\n```javascript\\n  // built-in or npm installed\\n  const lib = require('lib');\\n\\n  // local file\\n  const myLib = require('./myLib');\\n```\\n---\\n\\n## Built-in modules\\n\\n- process\\n- fs\\n- http\\n- [and many more](https://nodejs.org/api)\\n\\n---\\n\\n## Process\\n\\n- The process module provides:\\n- access to environment variables\\n- access to command line arguments\\n- access to build-time node and v8 flags\\n- messaging with other processes\\n- handling process level events\\n\\n---\\n### Environment variables\\n\\n```javascript\\n  process.env\\n  // returns an object holding all environment variables\\n\\n  process.env.MY_VAR // read the value of MY_VAR\\n\\n  process.env.MY_VAR = 'new value';\\n  // the new value is not reflected outside of the process\\n```\\n---\\n\\n### Reading process arguments\\n\\n```bash\\n  node script.js param1 param2=value\\n```\\n\\n```javascript\\n  process.argv.forEach(\\n    (index, value) => console.log(`${index}: ${value}`);\\n  );\\n  /*\\n    0: /path/to/node\\n    1: /path/to/script.js\\n    2: param1\\n    3: param2=value\\n  */\\n```\\n---\\n\\n## FS\\n\\n- `fs` provides file system capabilities:\\n- reading and writing to files, sockets and buffers\\n- reading and changing file permissions and stats\\n- creating and deleting directories and links\\n---\\n\\n### File Stats\\n\\n```javascript\\n  fs.stat('poem.txt', (error, data) => {\\n    if (error) {\\n      return console.error(error);\\n    }\\n\\n    data.isFile() // true\\n    data.isDirectory() // false\\n    data.size // 311 (bytes)\\n  });\\n```\\n---\\n\\n### Reading a file\\n\\n```javascript\\n  const fs = require('fs');\\n\\n  fs.readFile('./poem.txt', (error, file) => {\\n    if (error) {\\n      return console.error('you didn\\\\'t write a poem');\\n    }\\n\\n    console.log(file.contents);\\n  });\\n```\\n---\\n\\n### Writing a file\\n\\n```javascript\\n  const fs = require('fs');\\n\\n  fs.writeFile(\\n    'file.name',\\n    'content',\\n    (error) => console.error(error)\\n  );\\n```\\n---\\n\\n## HTTP / HTTPS\\n\\n- provides HTTP networking capabilities:\\n- making requests\\n- creating servers\\n---\\n\\n### Making an http request (http)\\n\\n```javascript\\n  const http = require('http');\\n  http.request(\\\"https://google.com\\\", (res) => {\\n    res.on('error', error => console.error(error.message));\\n\\n    const buffer = [];\\n    res.on('data', data => buffer.push(data));\\n\\n    res.on('end', () => console.log(buffer));\\n  }).end();\\n```\\n---\\n\\n### Creating a server (http)\\n\\n```javascript\\n  const http = require('http');\\n\\n  const server = http.createServer(\\n    (req, res) => res.end('hello world!')\\n  );\\n\\n  server.listen(7212);\\n```\\n---\\n\\n## NPM modules\\n\\nSee [npm](../../tooling/npm/)\\n\\n---\\n\\n## using APIs\\n\\n```javascript\\n  const fetch = require('node-fetch');\\n\\n  fetch('https://api.github.com/orgs/modern-js/members')\\n    .then(response => response.ok ?\\n      response.json() : Promise.reject())\\n    .then(members => Promise.all(\\n      members.map(member => fetch(member.url))\\n    ));\\n```\\n---\\n\\n## using databases\\n\\n## using amqp / kafka\\n\\n---\\n## Links\\n\\n- [NodeJS language support](http://node.green/)\\n- [List of nodeJS libraries](https://github.com/sindresorhus/awesome-nodejs)\\n- [HTTP/2 article](https://blog.risingstack.com/node-js-http-2-push/)\\n\""],"sourceRoot":""}